syntax = "proto3";
// Example how to update gogoprotobuf generated code (Mac OS).
// go get -u github.com/gogo/protobuf/...
// Download release of protobuf from: https://github.com/google/protobuf/releases 
// Install gogofaster program:
// go get github.com/gogo/protobuf/protoc-gen-gogofaster
// Use binary from unpacked release, for example:
// ../../protoc-3.1.0-osx-x86_64/bin/protoc --proto_path=../../protoc-3.1.0-osx-x86_64/:../../vendor/:. --gogofaster_out=. message.proto
// Note that we use vendored gogoprotobuf path in example above.

package proto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;

message ClientInfo {
  string User = 1 [(gogoproto.jsontag) = "user"];
  string Client = 2 [(gogoproto.jsontag) = "client"];
  bytes DefaultInfo = 3 [(gogoproto.customtype) = "github.com/nzlov/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "default_info,omitempty", (gogoproto.nullable) = false];
  bytes ChannelInfo = 4 [(gogoproto.customtype) = "github.com/nzlov/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "channel_info,omitempty", (gogoproto.nullable) = false];
}

message Message {
  string UID = 1 [(gogoproto.jsontag) = "uid"];
  bool Read = 2 [(gogoproto.jsontag) = "read"];
  int64 Timestamp= 3 [(gogoproto.jsontag) = "timestamp"];
  string Channel = 4 [(gogoproto.jsontag) = "channel"];
  bytes Data = 5 [(gogoproto.customtype) = "github.com/nzlov/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
  string Client = 6 [(gogoproto.jsontag) = "client,omitempty"];
  ClientInfo Info = 7 [(gogoproto.jsontag) = "info,omitempty"];
}

message JoinMessage {
  string Channel = 1 [(gogoproto.jsontag) = "channel"];
  ClientInfo Data = 2 [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message LeaveMessage {
  string Channel = 1 [(gogoproto.jsontag) = "channel"];
  ClientInfo Data = 2 [(gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
}

message ControlMessage {
  // UID in case of controlCommand is a unique node ID which originally published
  // this control command.
  string UID = 1 [(gogoproto.jsontag) = "uid"];
  string Method = 2 [(gogoproto.jsontag) = "method"];
  bytes Params = 3 [(gogoproto.customtype) = "github.com/nzlov/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "params", (gogoproto.nullable) = false];
}

message AdminMessage {
  string UID = 1 [(gogoproto.jsontag) = "uid"];
  string Method = 2 [(gogoproto.jsontag) = "method"];
  bytes Params = 3 [(gogoproto.customtype) = "github.com/nzlov/centrifugo/libcentrifugo/raw.Raw", (gogoproto.jsontag) = "params", (gogoproto.nullable) = false];
}